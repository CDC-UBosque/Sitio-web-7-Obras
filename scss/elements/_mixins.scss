@mixin resets-edge-ie ($css-rule, $css-property){
	// ---
	// --- support microsoft edge ---
	@supports (-ms-ime-align: auto) {
		#{$css-rule}: $css-property;							
	}
	
	// ---
	// --- support internet explorer ---
	@media all and (-ms-high-contrast: none), (-ms-high-contrast: active){
		#{$css-rule}: $css-property;		
	}
}

// ------------------------ Display grid cross browser settings --------------------------- //
// --------------------------------------------------- //
// display grid parent
@mixin display-grid{
	
	@supports (display: grid) {
		display: grid;
	}
	
	@supports (-ms-ime-align: auto) {
		display: grid;							
	}
	
	@supports not (display: grid){
		display: inline-block;
	}
	
	@media all and (-ms-high-contrast: none), (-ms-high-contrast: active){
		display: -ms-grid;		
	}
	
}

// display flex parent
@mixin display-flex{
	
	@supports (display: flex) {
		display: flex;
	}
	
	@supports (-ms-ime-align: auto) {
		display: flex;							
	}
	
	@supports not (display: flex){
		display: inline-block;
		width: 100%;
	}
	
	@media all and (-ms-high-contrast: none), (-ms-high-contrast: active){
		display: -ms-grid;	
		width: 100%;	
	}
	
}

// ------------------------ cross browsers mixins --------------------------- //
// --------------------------------------------------- //

/// Mixin to prefix a property
/// @author Hugo Giraudel
/// @param {String} $property - Property name
/// @param {*} $value - Property value
/// @param {List} $prefixes (()) - List of prefixes to print
@mixin prefix($property, $value, $prefixes: ()) {
  @each $prefix in $prefixes {
    #{'-' + $prefix + '-' + $property}: $value;
  }
 
  // Output standard non-prefixed declaration
  #{$property}: $value;
}

// usage
//@include prefix(border-radius, 0px, webkit moz);

// ------------------------ Display grid columns parent cross browser settings --------------------------- //
// --------------------------------------------------- //
// display grid child parents
@mixin grid-parent-1-columns ($x1) {
	  grid-template-columns: $x1;
  -ms-grid-columns: $x1;
}

@mixin grid-parent-2-columns ($x1, $x2) {
	  grid-template-columns: $x1 $x2;
  -ms-grid-columns: $x1 $x2;
}

@mixin grid-parent-3-columns ($x1, $x2, $x3) {
	  grid-template-columns: $x1 $x2 $x3;
  -ms-grid-columns: $x1 $x2 $x3;
}

@mixin grid-parent-4-columns ($x1, $x2, $x3, $x4) {
	  grid-template-columns: $x1 $x2 $x3 $x4;
  -ms-grid-columns: $x1 $x2 $x3 $x4;
}

@mixin grid-parent-5-columns ($x1, $x2, $x3, $x4, $x5) {
	  grid-template-columns: $x1 $x2 $x3 $x4 $x5;
  -ms-grid-columns: $x1 $x2 $x3 $x4 $x5;
}

@mixin grid-parent-6-columns ($x1, $x2, $x3, $x4, $x5, $x6) {
	  grid-template-columns: $x1 $x2 $x3 $x4 $x5 $x6;
  -ms-grid-columns: $x1 $x2 $x3 $x4 $x5 $x6;
}

@mixin grid-parent-7-columns ($x1, $x2, $x3, $x4, $x5, $x6, $x7) {
	  grid-template-columns: $x1 $x2 $x3 $x4 $x5 $x6 $x7;
  -ms-grid-columns: $x1 $x2 $x3 $x4 $x5 $x6 $x7;
}

@mixin grid-parent-8-columns ($x1, $x2, $x3, $x4, $x5, $x6, $x7, $x8) {
	  grid-template-columns: $x1 $x2 $x3 $x4 $x5 $x6 $x7 $x8;
  -ms-grid-columns: $x1 $x2 $x3 $x4 $x5 $x6 $x7 $x8;
}

@mixin grid-parent-9-columns ($x1, $x2, $x3, $x4, $x5, $x6, $x7, $x8, $x9) {
	  grid-template-columns: $x1 $x2 $x3 $x4 $x5 $x6 $x7 $x8 $x9;
  -ms-grid-columns: $x1 $x2 $x3 $x4 $x5 $x6 $x7 $x8 $x9;
}

@mixin grid-parent-10-columns ($x1, $x2, $x3, $x4, $x5, $x6, $x7, $x8, $x9, $x10) {
	  grid-template-columns: $x1 $x2 $x3 $x4 $x5 $x6 $x7 $x8 $x9 $x10;
  -ms-grid-columns: $x1 $x2 $x3 $x4 $x5 $x6 $x7 $x8 $x9 $x10;
}

@mixin grid-parent-11-columns ($x1, $x2, $x3, $x4, $x5, $x6, $x7, $x8, $x9, $x10, $x11) {
	  grid-template-columns: $x1 $x2 $x3 $x4 $x5 $x6 $x7 $x8 $x9 $x10 $x11;
  -ms-grid-columns: $x1 $x2 $x3 $x4 $x5 $x6 $x7 $x8 $x9 $x10 $x11;
}

@mixin grid-parent-12-columns ($x1, $x2, $x3, $x4, $x5, $x6, $x7, $x8, $x9, $x10, $x11, $x12) {
	  grid-template-columns: $x1 $x2 $x3 $x4 $x5 $x6 $x7 $x8 $x9 $x10 $x11 $x12;
  -ms-grid-columns: $x1 $x2 $x3 $x4 $x5 $x6 $x7 $x8 $x9 $x10 $x11 $x12;
}

// ------------------------ Display grid rows parent cross browser settings --------------------------- //
// --------------------------------------------------- //
// display grid child parents
@mixin grid-parent-1-rows ($x1) {
	grid-template-rows: $x1;
  -ms-grid-rows: $x1;
}

@mixin grid-parent-2-rows ($x1, $x2) {
	  grid-template-rows: $x1 $x2;
  -ms-grid-rows: $x1 $x2;
}

@mixin grid-parent-3-rows ($x1, $x2, $x3) {
	  grid-template-rows: $x1 $x2 $x3;
  -ms-grid-rows: $x1 $x2 $x3;
}

@mixin grid-parent-4-rows ($x1, $x2, $x3, $x4) {
	  grid-template-rows: $x1 $x2 $x3 $x4;
  -ms-grid-rows: $x1 $x2 $x3 $x4;
}

@mixin grid-parent-5-rows ($x1, $x2, $x3, $x4, $x5) {
	  grid-template-rows: $x1 $x2 $x3 $x4 $x5;
  -ms-grid-rows: $x1 $x2 $x3 $x4 $x5;
}

@mixin grid-parent-6-rows ($x1, $x2, $x3, $x4, $x5, $x6) {
	  grid-template-rows: $x1 $x2 $x3 $x4 $x5 $x6;
  -ms-grid-rows: $x1 $x2 $x3 $x4 $x5 $x6;
}

@mixin grid-parent-7-rows ($x1, $x2, $x3, $x4, $x5, $x6, $x7) {
	  grid-template-rows: $x1 $x2 $x3 $x4 $x5 $x6 $x7;
  -ms-grid-rows: $x1 $x2 $x3 $x4 $x5 $x6 $x7;
}

@mixin grid-parent-8-rows ($x1, $x2, $x3, $x4, $x5, $x6, $x7, $x8) {
	  grid-template-rows: $x1 $x2 $x3 $x4 $x5 $x6 $x7 $x8;
  -ms-grid-rows: $x1 $x2 $x3 $x4 $x5 $x6 $x7 $x8;
}

@mixin grid-parent-9-rows ($x1, $x2, $x3, $x4, $x5, $x6, $x7, $x8, $x9) {
	  grid-template-rows: $x1 $x2 $x3 $x4 $x5 $x6 $x7 $x8 $x9;
  -ms-grid-rows: $x1 $x2 $x3 $x4 $x5 $x6 $x7 $x8 $x9;
}

@mixin grid-parent-10-rows ($x1, $x2, $x3, $x4, $x5, $x6, $x7, $x8, $x9, $x10) {
	  grid-template-rows: $x1 $x2 $x3 $x4 $x5 $x6 $x7 $x8 $x9 $x10;
  -ms-grid-rows: $x1 $x2 $x3 $x4 $x5 $x6 $x7 $x8 $x9 $x10;
}

@mixin grid-parent-11-rows ($x1, $x2, $x3, $x4, $x5, $x6, $x7, $x8, $x9, $x10, $x11) {
	  grid-template-rows: $x1 $x2 $x3 $x4 $x5 $x6 $x7 $x8 $x9 $x10 $x11;
  -ms-grid-rows: $x1 $x2 $x3 $x4 $x5 $x6 $x7 $x8 $x9 $x10 $x11;
}

@mixin grid-parent-12-rows ($x1, $x2, $x3, $x4, $x5, $x6, $x7, $x8, $x9, $x10, $x11, $x12) {
	  grid-template-rows: $x1 $x2 $x3 $x4 $x5 $x6 $x7 $x8 $x9 $x10 $x11 $x12;
  -ms-grid-rows: $x1 $x2 $x3 $x4 $x5 $x6 $x7 $x8 $x9 $x10 $x11 $x12;
}

// display grid child columns
@mixin grid-child-column ($col-start, $col-end) {
	  grid-column: #{$col-start}/#{$col-end};
  -ms-grid-column: $col-start;
  -ms-grid-column-span: $col-end - $col-start;
}

// display grid child rows
@mixin grid-child-row ($row-start, $row-end) {
	  grid-row: #{$row-start}/#{$row-end};
  -ms-grid-row: $row-start;
  -ms-grid-row-span: $row-end - $row-start;
}


// ------------------------ Microsoft edge & IE fixes --------------------------- //
// --------------------------------------------------- //

@mixin reset-display ($display-edge, $display-ie){
	// ---
	// --- support microsoft edge ---
	@supports (-ms-ime-align: auto) {
		display: $display-edge;							
	}
	
	// ---
	// --- support internet explorer ---
	@media all and (-ms-high-contrast: none), (-ms-high-contrast: active){
		display: $display-ie;		
	}
}

// ------------------------ Mixin cards for repositories --------------------------- //
// --------------------------------------------------- //
@mixin links-footer{
	
	color: $color_white;
	position: relative;
	transition: all .1s ease-in-out;
	text-decoration: none;
	overflow: hidden;
	display: inline-block;
	font-size: $font_size_legal_footer_text;
	line-height: $line_height_legal_footer_text;
	border: 1px solid $color_white;
	opacity: 0.6;
    padding: .3rem .5rem;
    margin: 0 0.5rem 0 0;
    text-transform: uppercase;
	
	/*&:after{
		position: absolute;
		content: "";
		background: $color_white;
		width: 70%;
		left: -100%;
		top: 50%;
		height: 2px;
		transition: all .5s ease-in-out;
		visibility: hidden;		
	}*/
	
	&:hover{
		
		color: $color_white;
		opacity: 1;
		
		/*&:after{
		    width: 70%;
		    left: 100%;
		    visibility: visible;
		}*/
		
	}
	
}

@mixin links-footer-pages{
	
	color: $color_grey_dark;
	position: relative;
	transition: all .1s ease-in-out;
	text-decoration: none;
	overflow: hidden;
	display: inline-block;
	font-size: $font_size_legal_footer_text;
	line-height: $line_height_legal_footer_text;
	border: 1px solid $color_grey_dark;
	opacity: 0.6;
    padding: .3rem .5rem;
    margin: 0 0.5rem 0 0;
	
	/*&:after{
		position: absolute;
		content: "";
		background: $color_white;
		width: 70%;
		left: -100%;
		top: 50%;
		height: 2px;
		transition: all .5s ease-in-out;
		visibility: hidden;		
	}*/
	
	&:hover{
		
		color: $color_grey_dark;
		opacity: 1;
		
		/*&:after{
		    width: 70%;
		    left: 100%;
		    visibility: visible;
		}*/
		
	}
	
}

@mixin btn-primary{
	border: 1px solid transparentize($color_orange, 0.3);
	letter-spacing: 1.8px;
	border-radius: 0px;
    width: 100%;
    text-align: center;
	padding: 0.9rem 1.2rem;
	transition: all .1s ease-in-out;
	@include button_text ();
	margin: 0 1rem 1rem 0;
	text-decoration: none;
	position: relative;
	background: none;
	
	&:before{
		position: absolute;
		content: "";
		background: url(../../images/svg/arrow-up.svg);
		background-repeat: no-repeat;
		width: 23px;
		height: 23px;
		background-size: contain;
		top: 0rem;
		left: calc(50% - 7px);
		transition: all .2s ease-in-out;
		@include prefix(transition, all .2s ease-in-out, webkit moz o);
		opacity: 0;
	}
	
	&:after{
		position: absolute;
		content: "";
		background: url(../../images/svg/arrow-down.svg);
		background-repeat: no-repeat;
		width: 23px;
		height: 23px;
		background-size: contain;
		bottom: 0rem;
		left: calc(50% - 7px);
		transition: all .2s ease-in-out;
		@include prefix(transition, all .2s ease-in-out, webkit moz o);
		opacity: 0;
	}
	
	&:hover,
	&:focus,
	&:active,
	&:not(:disabled):not(.disabled).active,
	&:not(:disabled):not(.disabled):active{
		border: 3px solid $color_orange;
		background: none;
		color: $color_orange;
		text-decoration: none;
		
		&:after{
			bottom: -2rem;
			//opacity: 1;
		}
		
		&:before{
			top: -2rem;
			//opacity: 1;
		}
		
	}
	
}

@mixin btn-primary-yellow{
	background: $color-amarillo-rad;
	border-color: $color-amarillo-rad;
	display: block;
	@include font-block-complementario-s ();
	letter-spacing: 1.8px;
	color: $color-100;
	border-radius: 0px;
    width: 100%;
    text-align: center;
	padding: 0.3rem 0.7rem;
	width: fit-content;
	
	@include resets-edge-ie (display, inline-block);
	@include resets-edge-ie (width, auto);
	
	&:hover{
		background: $color-blanco-rad;
		//color: $color-amarillo-rad;
		border-color: $color-amarillo-rad;
	}
	
}

@mixin hover-links($color-hover){
	
	&:after{
		position: absolute;
		background: $color-hover;
		content: "";
		bottom: -3px;
		left: 0;
		width: 0%;
		height: 2px;
		@include prefix(transition, all .3s ease-in-out, webkit moz);
	}
	
	&:hover{
		
		&:after{
			width: 100%;
			right: 0;
		}
			
	}
	
}